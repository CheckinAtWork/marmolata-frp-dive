image: &image marmolata-registry.mo.sap.corp/marmolata/build.scala_2.11.openjdk8:latest

pipeline:
  clone:
    image: plugins/git
    skip_verify: true
    tags: true
  cache-restore:
    image: plugins/sftp-cache
    restore: true
    when:
      event: [push, pull_request, tag]
  build:
    image: *image
    environment:
      - IVY2=.ivy2
    commands:
      - sbt -Dsbt.ivy.home=$IVY2 scalastyle compile doc
      - sbt -Dsbt.ivy.home=$IVY2 coverage scalarxJVM/test scalarxJVM/coverageReport
      - sbt -Dsbt.ivy.home=$IVY2 coverage selfrxJVM/test selfrxJVM/coverageReport
      - sbt -Dsbt.ivy.home=$IVY2 metarxJVM/test:compile
      - sbt -Dsbt.ivy.home=$IVY2 metarxJS/test:compile
      - sbt -Dsbt.ivy.home=$IVY2 coverage metarxJVM/test metarxJVM/coverageReport || true
      - sbt -Dsbt.ivy.home=$IVY2 coverageReport
      - sbt -Dsbt.ivy.home=$IVY2 coverageAggregate
      - sbt -Dsbt.ivy.home=$IVY2 scalarxJS/test selfrxJS/test | tee testoutput.txt
  cloc:
    image: marmolata-registry.mo.sap.corp/marmolata/drone-plugin.cloc
  testCoverage:
    image: marmolata-registry.mo.sap.corp/marmolata/drone-plugin.pr-coverage:latest
    directories: [core/jvm, core/js, sql/jvm, sql/js]
  warningstatus:
    image: marmolata-registry.mo.sap.corp/marmolata/drone-plugin.warnings:latest
  testreport:
    image: marmolata-registry.mo.sap.corp/marmolata/drone-plugin.testreport:latest
  publish_artifact_PR:
    image: *image
    when:
      event: pull_request
    commands:
      - sbt -Dsbt.ivy.home=.ivy2 publish
  publish_artifact:
    image: *image
    when:
      event: [push, tag]
      branch: [dev, master, refs/tags/*]
    commands:
      - echo -e "realm=Sonatype Nexus Repository Manager\nhost=$NEXUS_MILESTONE_REPO\nuser=$NEXUS_MILESTONE_USER\npassword=$NEXUS_MILESTONE_PASSWORD" > .credentials
      - sbt -Dsbt.ivy.home=.ivy2 \
        'set credentials in ThisBuild += Credentials(Path(".") / ".credentials")' \
        publish
  publish_documentation:
    image: marmolata-registry.mo.sap.corp/marmolata/drone-plugin.publish:latest
    when:
      event: [tag, push]
      branch: [dev, master, refs/tags/*]
    commands:
      - /publish-documentation.sh
  cache-rebuild:
    image: plugins/sftp-cache
    rebuild: true
    when:
      event: [push, pull_request, tag]
      status: [success, failure]
  slack:
    image: plugins/slack
    when:
      change: true
      event: [push, pull_request, tag]
      status: [success, failure]
